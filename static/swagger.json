{
  "swagger": "2.0",
  "info": {
    "title": "Task Management API",
    "version": "1.0"
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
    }
  },
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login and get JWT",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token received"
          },
          "401": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Get a specific user's details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a specific user's details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/users/worker": {
      "get": {
        "summary": "Get all worker users",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of worker users"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "summary": "Create a new task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "403": {
            "description": "Forbidden - Only managers can create tasks"
          }
        }
      },
      "get": {
        "summary": "List all tasks for the logged-in user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks"
          }
        }
      }
    },
    "/tasks/all": {
      "get": {
        "summary": "Get all tasks (for managers only)",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "summary": "Get a specific task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "summary": "Update a specific task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/tasks/{task_id}/complete": {
      "put": {
        "summary": "Mark a specific task as completed",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the task to mark as completed."
          }
        ],
        "responses": {
          "200": {
            "description": "Task marked as completed"
          },
          "403": {
            "description": "Permission denied"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "role": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "due_date": {
          "type": "string",
          "format": "date"
        },
        "priority": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "completed"
          ]
        },
        "assigned_to": {
          "type": "integer"
        }
      },
      "required": [
        "title",
        "description",
        "due_date",
        "priority",
        "status",
        "assigned_to"
      ]
    }
  }
}
